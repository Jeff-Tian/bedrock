AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  AWSAccessKeyId:
    Type: String
    Description: AWS Access Key ID
  AWSSecretAccessKey:
    Type: String
    Description: AWS Secret Access Key

Resources:
  EasySchoolBackendFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist.zip
      Handler: dist/serverless/serverless.handler
      Runtime: nodejs18.x
      Timeout: 900
      PackageType: Zip
      Environment:
        Variables:
          AWSAccessKeyId: !Ref AWSAccessKeyId
          AWSSecretAccessKey: !Ref AWSSecretAccessKey
          CYCLIC_DB: outstanding-necklace-frogCyclicDB
          CYCLIC_APP_ID: outstanding-necklace-frog
          CYCLIC_URL: https://outstanding-necklace-frog.cyclic.app
          CYCLIC_BUCKET_NAME: cyclic-outstanding-necklace-frog-eu-north-1
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{any+}
            Method: ANY
      Role: !GetAtt LambdaDynamoDBExecutionRole.Arn

  LambdaDynamoDBExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole

      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

      Policies:
        - PolicyName: LambdaDynamoDBAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource: !GetAtt ChatsTable.Arn

  ChatsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: outstanding-necklace-frogCyclicDB
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: keys_gsi
          AttributeType: S
        - AttributeName: keys_gsi_sk
          AttributeType: S
        - AttributeName: gsi_prj
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: keys_gsi
          KeySchema:
            - AttributeName: keys_gsi
              KeyType: HASH
            - AttributeName: keys_gsi_sk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL # 或者指定具体的属性
        - IndexName: gsi_prj
          KeySchema:
            - AttributeName: gsi_prj
              KeyType: HASH
          Projection:
            ProjectionType: ALL # 或者指定具体的属性
      BillingMode: PAY_PER_REQUEST

Outputs:
  ChatsTableArn:
    Description: "ARN of the Chats DynamoDB table"
    Value: !GetAtt ChatsTable.Arn
